[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ana Jaramillo’s Website",
    "section": "",
    "text": "I am a current Biology major and Mathematics & Statistics minor at Pomona College. This is my landing page for data science, bioinformatics, and computing projects."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I guess theres nothing to learn about me at this time."
  },
  {
    "objectID": "TidyTuesdays.html",
    "href": "TidyTuesdays.html",
    "title": "TidyTuesdays",
    "section": "",
    "text": "something in here"
  },
  {
    "objectID": "TT2.html",
    "href": "TT2.html",
    "title": "TidyTuesday #2",
    "section": "",
    "text": "Data was sourced from US Egg Production Data by jonthegeek on Github\n\n# Packages\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\n# Data\neggproduction  &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-11/egg-production.csv')\n\nRows: 220 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): prod_type, prod_process, source\ndbl  (2): n_hens, n_eggs\ndate (1): observed_month\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Filter by year\neggproduction |&gt;\n  select(observed_month, n_hens, n_eggs) |&gt;\n  filter(str_starts(as.character(observed_month), \"2020\"))\n\n# A tibble: 48 × 3\n   observed_month   n_hens     n_eggs\n   &lt;date&gt;            &lt;dbl&gt;      &lt;dbl&gt;\n 1 2020-01-31     64019000 1221400000\n 2 2020-02-29     64384000 1154100000\n 3 2020-03-31     64730000 1239900000\n 4 2020-04-30     65044000 1203500000\n 5 2020-05-31     64481000 1239100000\n 6 2020-06-30     64251000 1207400000\n 7 2020-07-31     64353000 1255200000\n 8 2020-08-31     64223000 1257100000\n 9 2020-09-30     63975000 1219800000\n10 2020-10-31     63728000 1254800000\n# ℹ 38 more rows\n\n# Plotting\nggplot(eggproduction, aes(x = observed_month, y = n_eggs/n_hens)) +\n  geom_point() +\n  labs(\n    title = \"Number of eggs laid per hen in 2020\",\n    subtitle = \"*Assuming every hen laid the same number of eggs\",\n    x = \"Date\",\n    y = \"Number of Eggs\"\n  )"
  },
  {
    "objectID": "TT1.html",
    "href": "TT1.html",
    "title": "TidyTuesday #1",
    "section": "",
    "text": "Data was sourced from Numbats in Australia by jonthegeek on Github\n\n# Packages\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\n# Data\nnumbats &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-07/numbats.csv')\n\nRows: 805 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): scientificName, taxonConceptID, recordID, dataResourceName, month,...\ndbl  (7): decimalLatitude, decimalLongitude, year, hour, prcp, tmax, tmin\nlgl  (1): dryandra\ndttm (1): eventDate\ndate (1): day\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Filtering Data\nnumbats |&gt;\n  select(decimalLatitude, decimalLongitude, scientificName) |&gt;\n  filter(scientificName == \"Myrmecobius fasciatus\")\n\n# A tibble: 787 × 3\n   decimalLatitude decimalLongitude scientificName       \n             &lt;dbl&gt;            &lt;dbl&gt; &lt;chr&gt;                \n 1           -37.6             146. Myrmecobius fasciatus\n 2           -35.1             150. Myrmecobius fasciatus\n 3           -35               118. Myrmecobius fasciatus\n 4           -34.7             118. Myrmecobius fasciatus\n 5           -34.6             117. Myrmecobius fasciatus\n 6           -34.6             117. Myrmecobius fasciatus\n 7           -34.6             118. Myrmecobius fasciatus\n 8           -34.6             117. Myrmecobius fasciatus\n 9           -34.6             117. Myrmecobius fasciatus\n10           -34.6             117. Myrmecobius fasciatus\n# ℹ 777 more rows\n\n# Making Plots\nggplot(data = numbats, aes(x = decimalLatitude, y = decimalLongitude)) +\n  geom_point() +\n  labs(title = \"Coordinates of 787 Numbats (Myrmecobius fasciatus)\", x = \"Coordinate Latitude\", y = \"Coordinate Longitude\")\n\nWarning: Removed 83 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  }
]